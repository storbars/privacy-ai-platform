# Multi-stage Dockerfile for n8n + Nillion p√• Railway
FROM ubuntu:22.04 AS nillion-builder

# Install dependencies for Nillion
RUN apt-get update && apt-get install -y \
    curl \
    wget \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Install Nillion SDK
RUN curl -L https://github.com/NillionNetwork/nillion-sdk/releases/latest/download/install.sh | bash

# Verify installation and copy binaries
RUN /root/.local/bin/nilup --version
RUN /root/.local/bin/nillion --version

# Copy Nillion binaries to a clean location
RUN mkdir -p /nillion-dist/bin
RUN cp /root/.local/bin/* /nillion-dist/bin/

# Main application stage
FROM node:18-alpine AS final

# Install system dependencies
RUN apk add --no-cache \
    python3 \
    py3-pip \
    make \
    g++ \
    cairo-dev \
    jpeg-dev \
    pango-dev \
    musl-dev \
    giflib-dev \
    pixman-dev \
    pangomm-dev \
    libjpeg-turbo-dev \
    freetype-dev \
    bash

# Copy Nillion binaries from builder stage
COPY --from=nillion-builder /nillion-dist/bin/* /usr/local/bin/

# Set up working directory
WORKDIR /app

# Install n8n globally
RUN npm install -g n8n@latest

# Create n8n data directory
RUN mkdir -p /app/.n8n

# Copy package.json for any additional dependencies
COPY package*.json ./

# Install additional Node.js dependencies if needed
RUN npm install

# Copy startup script
COPY start.sh /app/start.sh
RUN chmod +x /app/start.sh

# Environment variables
ENV N8N_USER_FOLDER=/app/.n8n
ENV N8N_BASIC_AUTH_ACTIVE=true
ENV N8N_BASIC_AUTH_USER=admin
ENV N8N_BASIC_AUTH_PASSWORD=changeme123
ENV N8N_HOST=0.0.0.0
ENV N8N_PORT=8080
ENV N8N_PROTOCOL=http
ENV NILLION_DEVNET_MODE=local

# Expose port (Railway vil automatisk detektere dette)
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/healthz || exit 1

# Start application
CMD ["/app/start.sh"]